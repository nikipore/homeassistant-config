input_select:
  climate_mode_global_reset:
    name: "Thermostat: Modus zurücksetzen"
    options:
      - "<bitte wählen>"
      - "auto"
      - "heat"
      - "off"
  climate_mode_global_reset_daily:
    name: "Thermostat: Modus zurücksetzen (täglich)"
    options:
      - "<bitte wählen>"
      - "auto"
      - "heat"
      - "off"
  climate_mode_arbeitszimmer:
    name: "Thermostat: Modus (Arbeitszimmer)"
    options:
      - "auto"
      - "heat"
      - "off"
  climate_mode_badezimmer:
    name: "Thermostat: Modus (Badezimmer)"
    options:
      - "auto"
      - "heat"
      - "off"
  climate_mode_duschbad:
    name: "Thermostat: Modus (Duschbad)"
    options:
      - "auto"
      - "heat"
      - "off"
  climate_mode_kueche:
    name: "Thermostat: Modus (Küche)"
    options:
      - "auto"
      - "heat"
      - "off"
  climate_mode_nino:
    name: "Thermostat: Modus (Nino)"
    options:
      - "auto"
      - "heat"
      - "off"
  climate_mode_noah:
    name: "Thermostat: Modus (Noah)"
    options:
      - "auto"
      - "heat"
      - "off"
  climate_mode_schlafzimmer:
    name: "Thermostat: Modus (Schlafzimmer)"
    options:
      - "auto"
      - "heat"
      - "off"
  climate_mode_wohnzimmer:
    name: "Thermostat: Modus (Wohnzimmer)"
    options:
      - "auto"
      - "heat"
      - "off"

input_text:
  climate_protect_floor_heating_entities:
    name: "Thermostat: Ventilschutz aktiv"

automation:
  - alias: Protect floor heating ventiles
    mode: single
    trigger:
      - platform: time
        at: "18:00:00"
    condition:
      - condition: time
        weekday:
          - fri
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.climate_protect_floor_heating_entities
          value: "{{ states.climate | selectattr('state', '==', 'off') | map(attribute='entity_id') | join('|') | replace('climate.room_climate_', '@') }}" # pack entity IDs (max length 255)
      - condition: and
        conditions:
          - "{{ states('input_text.climate_protect_floor_heating_entities') != '' }}"
      - service: climate.set_hvac_mode
        target:
          entity_id: "{{ states('input_text.climate_protect_floor_heating_entities') | replace('|', ', ') | replace('@', 'climate.room_climate_') }}"
        data:
          hvac_mode: "heat"
      - service: climate.set_temperature
        target:
          entity_id: "{{ states('input_text.climate_protect_floor_heating_entities') | replace('|', ', ') | replace('@', 'climate.room_climate_') }}"
        data:
          temperature: 30
      - delay: "00:07:30"
      - service: climate.set_temperature
        target:
          entity_id: "{{ states('input_text.climate_protect_floor_heating_entities') | replace('|', ', ') | replace('@', 'climate.room_climate_') }}"
        data:
          temperature: 5
      - service: climate.set_hvac_mode
        target:
          entity_id: "{{ states('input_text.climate_protect_floor_heating_entities') | replace('|', ', ') | replace('@', 'climate.room_climate_') }}"
        data:
          hvac_mode: "off"
  - alias: Reset global thermostat mode
    trigger:
      - platform: state
        entity_id: input_select.climate_mode_global_reset
    condition:
      - condition: not
        conditions: >
          {{ is_state(trigger.entity_id, '<bitte wählen>') }}
    action:
      - service: climate.set_hvac_mode
        entity_id: all
        data:
          hvac_mode: >
            {{ states(trigger.entity_id) | string }}
      - service: input_select.select_first
        target:
          entity_id: "{{ trigger.entity_id }}"
  - alias: Reset global thermostat mode (daily)
    trigger:
      - platform: time
        at: "17:45:00"
    variables:
      input_select_entity: input_select.climate_mode_global_reset_daily
    condition:
      - condition: not
        conditions: >
          {{ is_state(input_select_entity, '<bitte wählen>') }}
    action:
      - service: climate.set_hvac_mode
        entity_id: all
        data:
          hvac_mode: >
            {{ states(input_select_entity) | string }}
  - id: "1631917756048"
    alias: Window open, climate off after a defined time (Arbeitszimmer)
    description: ""
    use_blueprint:
      path: local/window-open-climate-off.yaml
      input:
        window_entity: binary_sensor.window_sensor_arbeitszimmer_window_is_open
        input_select_entity: input_select.climate_mode_arbeitszimmer
        minimum_open_time: 15
        climate_target: climate.room_climate_arbeitszimmer
  - id: "1631688345035"
    alias: Window open, climate off after a defined time (Badezimmer)
    description: ""
    use_blueprint:
      path: local/window-open-climate-off.yaml
      input:
        window_entity: binary_sensor.window_sensor_badezimmer_window_is_open
        input_select_entity: input_select.climate_mode_badezimmer
        climate_target: climate.room_climate_badezimmer
        minimum_open_time: 15
  - id: "1631917708796"
    alias: Window open, climate off after a defined time (Duschbad)
    description: ""
    use_blueprint:
      path: local/window-open-climate-off.yaml
      input:
        window_entity: binary_sensor.window_sensor_duschbad_window_is_open
        input_select_entity: input_select.climate_mode_duschbad
        climate_target: climate.room_climate_duschbad
        minimum_open_time: 15
  - id: "1631985058532"
    alias: Window open, climate off after a defined time (Küche)
    description: ""
    use_blueprint:
      path: local/window-open-climate-off.yaml
      input:
        window_entity: binary_sensor.window_sensor_kueche_any_window_is_open
        input_select_entity: input_select.climate_mode_kueche
        climate_target: climate.room_climate_kuche
        minimum_open_time: 15
  - id: "1631918221399"
    alias: Window open, climate off after a defined time (Nino)
    description: ""
    use_blueprint:
      path: local/window-open-climate-off.yaml
      input:
        window_entity: binary_sensor.window_sensor_nino_any_window_is_open
        input_select_entity: input_select.climate_mode_nino
        climate_target: climate.room_climate_nino
        minimum_open_time: 15
  - id: "1631918255632"
    alias: Window open, climate off after a defined time (Noah)
    description: ""
    use_blueprint:
      path: local/window-open-climate-off.yaml
      input:
        window_entity: binary_sensor.window_sensor_noah_any_window_is_open
        input_select_entity: input_select.climate_mode_noah
        climate_target: climate.room_climate_noah
        minimum_open_time: 15
  - id: "1631917792995"
    alias: Window open, climate off after a defined time (Schlafzimmer)
    description: ""
    use_blueprint:
      path: local/window-open-climate-off.yaml
      input:
        window_entity: binary_sensor.window_sensor_schlafzimmer_window_is_open
        input_select_entity: input_select.climate_mode_schlafzimmer
        climate_target: climate.room_climate_schlafzimmer
        minimum_open_time: 15
  - id: "1631917834801"
    alias: Window open, climate off after a defined time (Wohnzimmer)
    description: ""
    use_blueprint:
      path: local/window-open-climate-off.yaml
      input:
        window_entity: binary_sensor.window_sensor_wohnzimmer_any_window_is_open
        input_select_entity: input_select.climate_mode_wohnzimmer
        climate_target: climate.room_climate_wohnzimmer
        minimum_open_time: 15

homeassistant:
  customize:
    sensor.thermostat_ankleide_humidity:
      friendly_name: "Ankleide"
    sensor.thermostat_arbeitszimmer_humidity:
      friendly_name: "Arbeitszimmer"
    sensor.thermostat_badezimmer_humidity:
      friendly_name: "Badezimmer"
    sensor.thermostat_duschbad_humidity:
      friendly_name: "Duschbad"
    sensor.thermostat_flur_humidity:
      friendly_name: "Flur"
    sensor.thermostat_kuche_humidity:
      friendly_name: "Küche"
    sensor.thermostat_nino_humidity:
      friendly_name: "Nino"
    sensor.thermostat_noah_humidity:
      friendly_name: "Noah"
    sensor.thermostat_schlafzimmer_humidity:
      friendly_name: "Schlafzimmer"
    sensor.thermostat_wohnzimmer_humidity:
      friendly_name: "Wohnzimmer"
