sensor:
  - platform: dwd_weather_warnings
    region_name: Stadt Frankfurt am Main
    name: Frankfurt am Main
  - platform: statistics
    name: weather_wind_speed_max_recent_statistics
    entity_id: sensor.weather_wind_speed
    state_characteristic: value_max
    max_age:
      minutes: 30

template:
  - binary_sensor:
      - name: weather_raining
        state: >
          {{ states('sensor.weather_rain_rate') | float(0) >= 10.0 }}
        icon: >
          {% if is_state("binary_sensor.weather_raining", "on") %}
            mdi:weather-pouring
          {% else %}
            mdi:circle-outline
          {% endif %}
        delay_off:
          minutes: 5
      - name: weather_storm
        state: >
          {{ states('sensor.weather_wind_speed') | float(0) >= 10.0 }}
        icon: >
          {% if is_state("binary_sensor.weather_storm", "on") %}
            mdi:weather-windy
          {% else %}
            mdi:circle-outline
          {% endif %}
        delay_off:
          minutes: 30
  - sensor:
      - name: sun_azimuth
        state_class: measurement
        unit_of_measurement: "°"
        state: >
          {{ state_attr('sun.sun', 'azimuth') }}
        icon: mdi:weather-sunny
      - name: sun_elevation
        state_class: measurement
        unit_of_measurement: "°"
        state: >
          {{ state_attr('sun.sun', 'elevation') }}
        icon: mdi:weather-sunset-up
      - name: weather_latest_update
        state: >
          {{ state_attr('weather.dwd_weather_wiesbaden_biebrich_1h', 'latest_update_utc') }}
        device_class: timestamp
      - name: weather_forecast_cloud_coverage
        state_class: measurement
        unit_of_measurement: "%"
        state: >
          {{ states('sensor.cloud_coverage_wiesbaden_biebrich_1h') }}
        icon: mdi:cloud-outline
      - name: weather_forecast_dewpoint
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {{ states('sensor.dewpoint_wiesbaden_biebrich_1h') }}
        device_class: temperature
      - name: weather_forecast_precipitation
        state_class: measurement
        unit_of_measurement: "mm"
        state: >
          {{ states('sensor.precipitation_wiesbaden_biebrich_1h') }}
        icon: mdi:weather-rainy
      - name: weather_forecast_wind_gusts
        state_class: measurement
        unit_of_measurement: "km/h"
        state: >
          {{ states('sensor.wind_gusts_wiesbaden_biebrich_1h') }}
        icon: mdi:weather-rainy
      - name: weather_forecast_sun_duration
        state_class: measurement
        unit_of_measurement: "s"
        state: >
          {{ states('sensor.sun_duration_wiesbaden_biebrich_1h') }}
        icon: mdi:weather-sunny
      - name: weather_forecast_temperature
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {{ states('sensor.temperature_wiesbaden_biebrich_1h') }}
        device_class: temperature
      - name: weather_forecast_temperature_interpolated
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {% set temperature = state_attr('sensor.temperature_wiesbaden_biebrich_1h', 'data') %}
          {% set t = now() %}
          {% set index = ((as_timestamp(t) - as_timestamp(temperature[0]['datetime'])) // 3600) | int %}
          {% if index < 0 %}
            {% set result = temperature[0]['value'] %}
          {% else %}
            {% set result = temperature[index]['value'] + (temperature[index+1]['value'] - temperature[index]['value']) * t.minute / 60 %}
          {% endif %}
          {{ result | round(1) }}
        device_class: temperature
      - name: weather_forecast_temperature_high
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {% set temperature = state_attr('sensor.temperature_wiesbaden_biebrich_1h', 'data') %}
          {% set i = max(0, (as_timestamp(state_attr('sun.sun', 'next_setting')) - as_timestamp(temperature[0]['datetime'])) // 3600) | int(0) %}
          {{ temperature[:i+2] | map(attribute='value') | max | float(0) }}
        device_class: temperature
      - name: weather_forecast_temperature_low
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {% set temperature = state_attr('sensor.temperature_wiesbaden_biebrich_1h', 'data') %}
          {% set i = max(0, (as_timestamp(state_attr('sun.sun', 'next_rising')) - as_timestamp(temperature[0]['datetime'])) // 3600) | int(0) %}
          {{ temperature[:i+2] | map(attribute='value') | min | float(0) }}
        device_class: temperature
      - name: weather_humidity
        state_class: measurement
        unit_of_measurement: "%"
        state: >
          {{ state_attr('weather.dwd_weather_wiesbaden_biebrich_1h', 'humidity') }}
        device_class: humidity
      - name: weather_pressure
        state_class: measurement
        unit_of_measurement: "mbar"
        state: >
          {{ state_attr('weather.dwd_weather_wiesbaden_biebrich_1h', 'pressure') }}
        device_class: pressure
      - name: weather_rain_rate
        state_class: measurement
        unit_of_measurement: "mm/h"
        state: >
          {{ states('sensor.popp_rain_sensor_rain_rate') }}
        icon: mdi:weather-pouring
      - name: weather_temperature
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {{ states('sensor.temperature_sensor_outdoor_air_temperature') }}
        device_class: temperature
      - name: weather_wind_direction
        state_class: measurement
        unit_of_measurement: "°"
        state: >
          {{ state_attr('weather.dwd_weather_wiesbaden_biebrich_1h', 'wind_bearing') }}
        icon: mdi:compass-outline
      - name: weather_wind_direction_text
        state_class: measurement
        state: >
          {{ ['N','NNE','NE','ENE','E','ESE','SE','SSE','S','SSW','SW','WSW','W','WNW','NW','NNW'][((((states('sensor.weather_wind_direction') | float(0)) + 11.25) % 360) / 22.5) | int] }}
        icon: mdi:compass-outline
      - name: weather_wind_speed
        unit_of_measurement: "m/s"
        state_class: measurement
        state: >
          {{ states('sensor.z_weather_velocity') }}
        icon: mdi:weather-windy
      - name: weather_wind_speed_max_recent
        unit_of_measurement: "m/s"
        state_class: "measurement"
        state: >
          {{ states('sensor.weather_wind_speed_max_recent_statistics') | float(states('sensor.weather_wind_speed')) }}
        icon: mdi:weather-windy
      - name: weather_wind_force
        unit_of_measurement: "bft"
        state_class: measurement
        state: >
          {{ ([0, 0.3, 1.6, 3.4, 5.5, 8.0, 10.8, 13.9, 17.2, 20.8, 24.5, 28.5, 32.7] | select("<=", states('sensor.weather_wind_speed') | float(0)) | list | length) - 1 }}
        icon: mdi:weather-windy

homeassistant:
  customize:
    sensor.sun_azimuth:
      friendly_name: "Sonnenstand (Azimut)"
    sensor.sun_elevation:
      friendly_name: "Sonnenstand (Höhe)"
    binary_sensor.weather_raining:
      friendly_name: "Wetteralarm: Regen"
    binary_sensor.weather_storm:
      friendly_name: "Wetteralarm: Sturm"
    sensor.weather_hourly_forecast_index_next_rising:
      friendly_name: "Wettervorhersage: Index des nächsten Sonnenaufgangs"
    sensor.weather_hourly_forecast_index_next_setting:
      friendly_name: "Wettervorhersage: Index des nächsten Sonnenuntergangs"
    sensor.weather_latest_update:
      friendly_name: "Wetter: zuletzt aktualisiert"
    sensor.weather_forecast_cloud_coverage:
      friendly_name: "Wolkenbedeckung"
    sensor.weather_forecast_dewpoint:
      friendly_name: "Taupunkt"
    sensor.weather_forecast_precipitation:
      friendly_name: "Niederschlag"
    sensor.weather_forecast_wind_gusts:
      friendly_name: "Windböen"
    sensor.weather_forecast_sun_duration:
      friendly_name: "Sonnenscheindauer"
    sensor.weather_forecast_temperature_high:
      friendly_name: "Temperatur (max.)"
    sensor.weather_forecast_temperature_low:
      friendly_name: "Temperatur (min.)"
    sensor.weather_humidity:
      friendly_name: "relative Luftfeuchtigkeit"
    sensor.weather_pressure:
      friendly_name: "Luftdruck"
    sensor.weather_temperature:
      friendly_name: "Temperatur"
    sensor.weather_wind_direction:
      friendly_name: "Windrichtung"
    sensor.weather_wind_direction_text:
      friendly_name: "Windrichtung (Kompass)"
    sensor.weather_wind_force:
      friendly_name: "Windstärke"
    sensor.weather_wind_speed:
      friendly_name: "Windgeschwindigkeit"
    sensor.weather_wind_speed_max_recent:
      friendly_name: "Windgeschwindigkeit (letzte Bö)"
